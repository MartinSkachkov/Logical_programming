% дължина(L, N) - N е дължината на списъка L
% Условие: Известно е ограничение отгоре за дължината на L
%          или за N
дължина([], 0).
дължина([_|T], N) :- N #>= 0, N #= N1 + 1, дължина(T,N1).

% nth(L, N, A) - A е N-тият елемент на списъка L
% Условие: Известно е ограничение отгоре за дължината на L
%          или за N
nth([A|_], N, A) :- N #= 1.
nth([_|T], N, A) :- N #> 0, N1 #= N - 1, nth(T, N1, A).

% сума(L, S) - S е сума на елементите на списъка L
% Условие:  известно е ограничение отгоре за дължината на L
сума([], 0).
сума([H|T], S) :- S #= M + H, сума(T, M).

% A in 5..13 <=> A #>= 5, A #=< 13
% [A,B,C] ins 5..13 <=> A in 5..13, B in 5..13, C in 5..13.
% от_до(X, A, B) - X е списък, чиито елементи са числа между A и B
% Условие:  известно е ограничение отгоре за дължината на L
от_до([],_,_).
от_до([H|T], A, B) :- H #>= A, H #=< B, от_до(T,A,B).

% ограничен_списък(N, L) - L е списък с дължина не повече от N,
%                          чиито елементи са естествени числа, не
%                          по-големи от N
%
% Условие: Известно е N
ограничен_списък(N, L) :- K #=< N, дължина(L, K), L ins 0..N.

% факториел(N, F) - F = N!
% Условие: известно е N
факториел(0, 1).
факториел(N, F) :- N #> 0, F #= N * F1, N #= 1 + N1, факториел(N1,F1). 