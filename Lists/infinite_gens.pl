% nat(N) :- N #= 0 ; (K #= N-1, K #>= 0, nat(K)).
nat(N) :- N #= 0 ; nat(N-1).

% безкраен_генератор(X) :- nat(N), краен_генератор(N, X).
int(K) :- nat(N), (K #= N ; K #= -N), label([K]).

% генератор на двойките естествени числа
nat_pair([A,B]) :- nat(N), A in 0..N, B in 0..N, label([A,B]).

% генератор на всички списъци от естествени числа
nat_list_gen(X) :- nat(N), Дължина_X #=< N, дължина(X, Дължина_X), X ins 0..N, label(X).

% генератор на всички списъци от списъци от естествени числа
% [[A,B,C], [D,E]]
списък_от_списъци_от_естествени(XX) :-
nat(N),
Дължина_XX #=< N,
дължина(XX, Дължина_XX),
елементите_по_къси(XX, N),
елементите_на_елементите_са_между(XX, 0, N),
superlabel(XX).

дължина([],0).
дължина([_|T], N) :- N #> 0, N #= N1 + 1, дължина(T, N1).

% елементите_по_къси(X, N) - всички елементи на X са списъци с
%                            дължина по-малка от N
% Условие: N е известно, известно е ограничение отгоре за
%          дължината на X
елементите_по_къси([],_).
елементите_по_къси([X|XX],N) :- 
Дължина_X #=< N,
дължина(X, Дължина_X),
елементите_по_къси(XX, N).

% елементите_на_елементите_са_между(XX, A, B) - елементите на
%                  елементите на XX са цели числа между A и B
% Условие: Известни са A и B, известни са ограничения отгоре за
%          дължините на XX и на елементите на XX
елементите_на_елементите_са_между([],_,_).
елементите_на_елементите_са_между([X|XX], A, B) :-
X ins A..B,
елементите_на_елементите_са_между(XX, A, B).

% superlabel(XX) - извиква label за елементите на XX
% Условие: известно е ограничение отгоре за дължините на X и
%          елементите на XX
superlabel([]).
superlabel([X|XX]) :- label(X), superlabel(XX).

% ЗА ВСЯКО С ИМПЛИКАЦИЯ
forall(A,B) :- not((A, not(B))).

% просто(N) - N е просто число
% Условие: известно е N
просто(N) :- N #> 1, forall((Y #> 0, Y #=< N, N mod Y #= 0, label([Y])), (Y #= 1 ;Y #= N)). 

% просто_ген(N) - генератор на простите числа
просто_ген(N) :- nat(N), просто(N).

% p1235(X) - всички елементи на четна позиция в X са четни
% Условие: известно е X
nth([A|_], N, A) :- N #= 1.
nth([_|T], N, A) :- N #> 0, N1 #= N - 1, nth(T, N1, A).

p1235(X) :- forall( (nth(X,N,A), N #= 2*K, label([N])) , (A #= 2*B,label([A])) ).